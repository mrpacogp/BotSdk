// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<ESpell, FP>))]
  public unsafe class DictionaryEntry_ESpell_FP : Quantum.Prototypes.DictionaryEntry {
    public Quantum.QEnum32<ESpell> Key;
    public FP Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Bot))]
  public unsafe partial class BotPrototype : ComponentPrototype<Quantum.Bot> {
    public Quantum.Prototypes.InputPrototype Input;
    partial void MaterializeUser(Frame frame, ref Quantum.Bot result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Bot component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Bot result, in PrototypeMaterializationContext context = default) {
        this.Input.Materialize(frame, ref result.Input, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Castle))]
  public unsafe partial class CastlePrototype : ComponentPrototype<Quantum.Castle> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Castle result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Castle component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Castle result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Collectible))]
  public unsafe partial class CollectiblePrototype : ComponentPrototype<Quantum.Collectible> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Collectible result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Collectible component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Collectible result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Collector))]
  public unsafe class CollectorPrototype : ComponentPrototype<Quantum.Collector> {
    public MapEntityId DesiredCollectible;
    public QBoolean HasCollectible;
    public FP Speed;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Collector component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Collector result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.DesiredCollectible, in context, out result.DesiredCollectible);
        result.HasCollectible = this.HasCollectible;
        result.Speed = this.Speed;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Fighter))]
  public unsafe partial class FighterPrototype : ComponentPrototype<Quantum.Fighter> {
    public FP Power;
    partial void MaterializeUser(Frame frame, ref Quantum.Fighter result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Fighter component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Fighter result, in PrototypeMaterializationContext context = default) {
        result.Power = this.Power;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Health))]
  public unsafe partial class HealthPrototype : ComponentPrototype<Quantum.Health> {
    public FP MaxValue;
    [HideInInspector()]
    public FP Current;
    partial void MaterializeUser(Frame frame, ref Quantum.Health result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Health component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Health result, in PrototypeMaterializationContext context = default) {
        result.MaxValue = this.MaxValue;
        result.Current = this.Current;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public FPVector2 Movement;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.Movement = this.Movement;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Movement))]
  public unsafe partial class MovementPrototype : ComponentPrototype<Quantum.Movement> {
    [HideInInspector()]
    public FP OriginalSpeed;
    partial void MaterializeUser(Frame frame, ref Quantum.Movement result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Movement component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Movement result, in PrototypeMaterializationContext context = default) {
        result.OriginalSpeed = this.OriginalSpeed;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe partial class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef Ref;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.Ref = this.Ref;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpeedModifier))]
  public unsafe partial class SpeedModifierPrototype : ComponentPrototype<Quantum.SpeedModifier> {
    public FP Multiplier;
    public FP Time;
    partial void MaterializeUser(Frame frame, ref Quantum.SpeedModifier result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SpeedModifier component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SpeedModifier result, in PrototypeMaterializationContext context = default) {
        result.Multiplier = this.Multiplier;
        result.Time = this.Time;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpeedSpell))]
  public unsafe partial class SpeedSpellPrototype : ComponentPrototype<Quantum.SpeedSpell> {
    public Quantum.QEnum32<ESpell> SpellType;
    public FP SpeedMultiplier;
    public FP MultiplierDuration;
    public FP TTL;
    partial void MaterializeUser(Frame frame, ref Quantum.SpeedSpell result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SpeedSpell component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SpeedSpell result, in PrototypeMaterializationContext context = default) {
        result.SpellType = this.SpellType;
        result.SpeedMultiplier = this.SpeedMultiplier;
        result.MultiplierDuration = this.MultiplierDuration;
        result.TTL = this.TTL;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Spell))]
  public unsafe class SpellPrototype : ComponentPrototype<Quantum.Spell> {
    public Quantum.QEnum32<ESpell> SpellType;
    public FP ApplyToTarget;
    public FP ApplyToOthers;
    public FP Radius;
    public FP Speed;
    [HideInInspector()]
    public MapEntityId TargetEntity;
    public AssetRef<EntityPrototype> SpellSequence;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Spell component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Spell result, in PrototypeMaterializationContext context = default) {
        result.SpellType = this.SpellType;
        result.ApplyToTarget = this.ApplyToTarget;
        result.ApplyToOthers = this.ApplyToOthers;
        result.Radius = this.Radius;
        result.Speed = this.Speed;
        PrototypeValidator.FindMapEntity(this.TargetEntity, in context, out result.TargetEntity);
        result.SpellSequence = this.SpellSequence;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Spellcaster))]
  public unsafe partial class SpellcasterPrototype : ComponentPrototype<Quantum.Spellcaster> {
    [HideInInspector()]
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_ESpell_FP[] SpellsCooldown = {};
    partial void MaterializeUser(Frame frame, ref Quantum.Spellcaster result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Spellcaster component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Spellcaster result, in PrototypeMaterializationContext context = default) {
        if (this.SpellsCooldown.Length == 0) {
          result.SpellsCooldown = default;
        } else {
          var dict = frame.AllocateDictionary(out result.SpellsCooldown, this.SpellsCooldown.Length);
          for (int i = 0; i < this.SpellsCooldown.Length; ++i) {
            Quantum.ESpell tmpKey = default;
            FP tmpValue = default;
            tmpKey = this.SpellsCooldown[i].Key;
            tmpValue = this.SpellsCooldown[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Summoner))]
  public unsafe partial class SummonerPrototype : ComponentPrototype<Quantum.Summoner> {
    public FP Interval;
    public AssetRef<EntityPrototype> ToSummon;
    [HideInInspector()]
    public FP Timer;
    partial void MaterializeUser(Frame frame, ref Quantum.Summoner result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Summoner component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Summoner result, in PrototypeMaterializationContext context = default) {
        result.Interval = this.Interval;
        result.ToSummon = this.ToSummon;
        result.Timer = this.Timer;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
